import { Injectable } from '@nestjs/common';
import * as PDFDocument from 'pdfkit';
import * as fs from 'fs';
import { CreateUserDto } from './dto/citizen.dto';
import * as path from 'path';

@Injectable()
export class DocService {
  async generatePDF(user: CreateUserDto, file: Express.Multer.File): Promise<string> {
    const doc = new PDFDocument({ size: 'A4', margin: 50 });
    
    const pdfFileName = `citizenship_card_${user.name.replace(/\s+/g, '_')}.pdf`;  
    const filePath = path.join(__dirname, '../../pdfs', pdfFileName);
    
    // Header
    doc.rect(0, 0, doc.page.width, 100).fill('#4A90E2'); // Change the color as needed
    doc.fontSize(30).fillColor('white').text('Citizenship Card', { align: 'center' });
    
    // Move down for spacing after the header
    doc.moveDown(2);

    // Center the photo if it exists
    if (file && file.path) {
      const imageWidth = 100; // Define image width
      const x = (doc.page.width - imageWidth) / 2; // Centering logic for x coordinate
      doc.image(file.path, {
        fit: [imageWidth, imageWidth],
        align: 'center',
        valign: 'center',
        x: x,
        y: doc.y, // Maintain the y position after the header
      });
      
      doc.moveDown(4); // Add some space after the image
    }

    // User Information Section
    doc.fillColor('black').fontSize(16);
    doc.text(`Name: ${user.name}`);
    doc.text(`Age: ${user.age}`);
    doc.text(`Place of Birth: ${user.placeOfBirth}`);
    doc.text(`Date of Birth: ${user.dob}`);
    doc.text(`Address: ${user.address}`);
    doc.text(`Father's Name: ${user.fatherName}`);
    doc.text(`Mother's Name: ${user.motherName}`);
    doc.text(`Contact: ${user.contact}`);

    // Footer
    doc.moveDown(2);
    doc.fontSize(10).text('Generated by NepSewa', { align: 'center' });

    // Save the PDF to the specified path
    await doc.pipe(fs.createWriteStream(filePath));
    doc.end();

    const backendUrl = process.env.BACKEND_URL || 'http://localhost:3000';
    return `${backendUrl}/pdfs/${pdfFileName}`;
  }
}
